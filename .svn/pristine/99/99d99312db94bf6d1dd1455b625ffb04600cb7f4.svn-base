angular.module("manageBuilding", ["ngCookies"])
    .controller("watchMethod", function ($scope, $http) {
        $scope.page = {//页码状态
            pageMax: 1,
            pageNumber: 1,
            changePage: function () {
            }
        }

        //////////////////全选与不全选
        $scope.tesarry = [];
        $scope.choseArr = [];

        var str = "";//
        var flag = '';//是否点击了全选，是为a
        $scope.x = false;//默认未选中

        $scope.all = function (c, v) {//全选 c是全选按钮选中
            if (c == true) {
                $scope.x = true;
                $scope.choseArr = v;
            } else {
                $scope.x = false;
                $scope.choseArr = [];
            }

            flag = 'a';

        };

        $scope.chk = function (y, x) {//单选或者多选
            z = y.toString();
            if (flag == 'a') {//在全选的基础上操作
                str = $scope.choseArr.join(',') + ',';
            }
            if (x == true) {//选中
                str = str + z + ',';
            } else {
                str = str.replace(z + ',', '');//取消选中
            }

            $scope.choseArr = (str.substr(0, str.length - 1)).split(',');
        };

    }).controller("dynamicManagement", function ($scope, $http) {
        $scope.page = {//页码状态
            pageMax: 1,
            pageNumber: 1,
            changePage: function () {
            }
        }
        //////////////////全选与不全选
        $scope.tesarry = [];
        $scope.choseArr = [];

        var str = "";//
        var flag = '';//是否点击了全选，是为a
        $scope.x = false;//默认未选中

        $scope.all = function (c, v) {//全选 c是全选按钮选中
            if (c == true) {
                $scope.x = true;
                $scope.choseArr = v;
            } else {
                $scope.x = false;
                $scope.choseArr = [];
            }

            flag = 'a';

        };

        $scope.chk = function (y, x) {//单选或者多选
            z = y.toString();
            if (flag == 'a') {//在全选的基础上操作
                str = $scope.choseArr.join(',') + ',';
            }
            if (x == true) {//选中
                str = str + z + ',';
            } else {
                str = str.replace(z + ',', '');//取消选中
            }

            $scope.choseArr = (str.substr(0, str.length - 1)).split(',');
        };


        //删除动态
        $scope.del = function (dcid) {
            $http({
                url: "dynamiccontent/deleteDynamiccontent",
                method: "post",
                headers: {
                    'Content-Type': 'multipart/form-data'
                },
                params: {
                    dcId: dcid,
                }
            }).success(function (response) {
                if (response.success == true) {
                    console.log(response.message);
                } else {
                    console.log("error!");
                }
            });
        };

    }).controller("avtivitieManagement", function ($scope, $http) {
        $scope.page = {//页码状态
            pageMax: 1,
            pageNumber: 1,
            changePage: function () {
            }
        }

        var city_id = "";
        var reg_id = "";
        var key_name = "";

        // 获取捡漏信息
        function loadPage(cId, rId, kBName, page_id) {
            $scope.page.pageNumber = page_id;
            $scope.page.changePage = $scope.changePageFilter;
            $http({
                url: "activity/getAllClearanceActivity",
                method: "post",
                headers: {
                    'Content-Type': 'multipart/form-data'
                },
                params: {
                    cityId: cId,
                    regionId: rId,
                    keyBuildingName: kBName,
                    pageMaxNum: 6,
                    pageNo: page_id
                }
            }).success(function (response) {
                if (response.success == true) {
                    $scope.tesarry = [];
                    $scope.items = response.data;
                    angular.forEach(response.data, function (data) {
                        $scope.tesarry.push(data.buildingId);
                    });
                    $scope.refreshPageButton(page_id);
                }
            });
        }

        // 获取城市和区域
        $http({
            url: 'dictionary/getAllCityAndRegion',
            method: 'post',
        }).success(function (response) {
            console.log("get cities");
            if (response.success === true) {
                console.log(response.data);
                $scope.allCities = response.data;
            } else {
                console.error('error when access all region', response);
            }
        });

        // 选择城市后更新区域,同时获取信息
        $scope.chooseCity = function (city) {
            $scope.allRegions = city.regionList;
        };

        // 选择区域后获取捡漏信息
        $scope.fetchInfo = function (region) {
            if (region === undefined) {
                return;
            }
        }

        //////////////////全选与不全选
        $scope.tesarry = [];
        $scope.choseArr = [];

        var str = "";//
        var flag = '';//是否点击了全选，是为a
        $scope.x = false;//默认未选中

        $scope.all = function (c, v) {//全选 c是全选按钮选中
            if (c == true) {
                $scope.x = true;
                $scope.choseArr = v;
            } else {
                $scope.x = false;
                $scope.choseArr = [];
            }

            flag = 'a';

        };

        $scope.chk = function (y, x) {//单选或者多选
            z = y.toString();
            if (flag == 'a') {//在全选的基础上操作
                str = $scope.choseArr.join(',') + ',';
            }
            if (x == true) {//选中
                str = str + z + ',';
            } else {
                str = str.replace(z + ',', '');//取消选中
            }

            $scope.choseArr = (str.substr(0, str.length - 1)).split(',');
        };

        //首先获得捡漏页面数量
        $http({
            url: "activity/getClearanceActivityPageNum",
            method: "post",
            headers: {
                'Content-Type': 'multipart/form-data'
            },
            params: {
                pageMaxNum: 6,
            }
        }).success(function (response) {
            if (response.success == true) {
                $scope.page.pageMax = response.data;
            } else {
                console.log("error!");
            }
        }).error(function () {
            console.log("出错啦!");
        });

        //翻页函数
        $scope.changePage = function (aimPage) {
            console.log("i am changePage");
            $scope.page.changePage(aimPage);
            // loadPage(aimPage);
        }
        $scope.changePageFilter = function (aimPage) {
            console.log("i am loadpage");
            loadPage(aimPage);
        }

        //更新翻页按钮
        $scope.refreshPageButton = function (aimPage) {
            $scope.page.pageNumber = aimPage;
            $scope.pageButton = [];

            if (aimPage >= 1 && aimPage <= 3) {
                for (var i = 1; i <= aimPage; i++) {
                    $scope.pageButton[i] = i;
                }

                for (i; i <= 5; i++) { //将剩余位置置为null
                    if (i <= $scope.page.pageMax) { //aimPage+1
                        $scope.pageButton[i] = i;
                    } else {
                        $scope.pageButton[i] = null;
                    }
                }
            }
            else if (aimPage > 3) {
                if (aimPage + 2 <= $scope.page.pageMax) {
                    for (var i = 1; i <= 5; i++) {
                        $scope.pageButton[i] = aimPage - 3 + i;
                    }
                } else { //后面不足两页
                    var j = 0;
                    for (var i = 5; i >= 0; i--) {
                        if (($scope.page.pageMax - i) < 0) {
                            $scope.pageButton[i] = null;
                        }
                        else {
                            $scope.pageButton[i] = $scope.page.pageMax - j;
                            j++;
                        }
                    }
                }
            }
        }
        // 获取所有的
        loadPage(city_id, reg_id, key_name, 1);

    })