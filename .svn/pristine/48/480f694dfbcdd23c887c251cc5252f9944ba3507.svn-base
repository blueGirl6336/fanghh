<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hitwh.fanghh.dao.DeveloperDao">
  <resultMap id="BaseResultMap" type="hitwh.fanghh.pojo.Developer">
    <id column="developer_id" jdbcType="INTEGER" property="developerId" />
    <result column="develop_name" jdbcType="VARCHAR" property="developName" />
    <result column="develop_addr" jdbcType="VARCHAR" property="developAddr" />
    <result column="business_license" jdbcType="VARCHAR" property="businessLicense" />
    <result column="qual_level" jdbcType="VARCHAR" property="qualLevel" />
    <result column="legal_person" jdbcType="VARCHAR" property="legalPerson" />
    <result column="person_position" jdbcType="VARCHAR" property="personPosition" />
    <result column="broker_idcard" jdbcType="VARCHAR" property="brokerIdcard" />
    <result column="relation_phone" jdbcType="VARCHAR" property="relationPhone" />
    <result column="zipCode" jdbcType="VARCHAR" property="zipcode" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    developer_id, develop_name, develop_addr, business_license, qual_level, legal_person, 
    person_position, broker_idcard, relation_phone, zipCode, email, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dbo.Developer
    where developer_id = #{developerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dbo.Developer
    where developer_id = #{developerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="hitwh.fanghh.pojo.Developer">
    insert into dbo.Developer (developer_id, develop_name, develop_addr, 
      business_license, qual_level, legal_person, 
      person_position, broker_idcard, relation_phone, 
      zipCode, email, remark
      )
    values (#{developerId,jdbcType=INTEGER}, #{developName,jdbcType=VARCHAR}, #{developAddr,jdbcType=VARCHAR}, 
      #{businessLicense,jdbcType=VARCHAR}, #{qualLevel,jdbcType=VARCHAR}, #{legalPerson,jdbcType=VARCHAR}, 
      #{personPosition,jdbcType=VARCHAR}, #{brokerIdcard,jdbcType=VARCHAR}, #{relationPhone,jdbcType=VARCHAR}, 
      #{zipcode,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="hitwh.fanghh.pojo.Developer">
    insert into dbo.Developer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="developerId != null">
        developer_id,
      </if>
      <if test="developName != null">
        develop_name,
      </if>
      <if test="developAddr != null">
        develop_addr,
      </if>
      <if test="businessLicense != null">
        business_license,
      </if>
      <if test="qualLevel != null">
        qual_level,
      </if>
      <if test="legalPerson != null">
        legal_person,
      </if>
      <if test="personPosition != null">
        person_position,
      </if>
      <if test="brokerIdcard != null">
        broker_idcard,
      </if>
      <if test="relationPhone != null">
        relation_phone,
      </if>
      <if test="zipcode != null">
        zipCode,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="developerId != null">
        #{developerId,jdbcType=INTEGER},
      </if>
      <if test="developName != null">
        #{developName,jdbcType=VARCHAR},
      </if>
      <if test="developAddr != null">
        #{developAddr,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null">
        #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="qualLevel != null">
        #{qualLevel,jdbcType=VARCHAR},
      </if>
      <if test="legalPerson != null">
        #{legalPerson,jdbcType=VARCHAR},
      </if>
      <if test="personPosition != null">
        #{personPosition,jdbcType=VARCHAR},
      </if>
      <if test="brokerIdcard != null">
        #{brokerIdcard,jdbcType=VARCHAR},
      </if>
      <if test="relationPhone != null">
        #{relationPhone,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hitwh.fanghh.pojo.Developer">
    update dbo.Developer
    <set>
      <if test="developName != null">
        develop_name = #{developName,jdbcType=VARCHAR},
      </if>
      <if test="developAddr != null">
        develop_addr = #{developAddr,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null">
        business_license = #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="qualLevel != null">
        qual_level = #{qualLevel,jdbcType=VARCHAR},
      </if>
      <if test="legalPerson != null">
        legal_person = #{legalPerson,jdbcType=VARCHAR},
      </if>
      <if test="personPosition != null">
        person_position = #{personPosition,jdbcType=VARCHAR},
      </if>
      <if test="brokerIdcard != null">
        broker_idcard = #{brokerIdcard,jdbcType=VARCHAR},
      </if>
      <if test="relationPhone != null">
        relation_phone = #{relationPhone,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null">
        zipCode = #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where developer_id = #{developerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hitwh.fanghh.pojo.Developer">
    update dbo.Developer
    set develop_name = #{developName,jdbcType=VARCHAR},
      develop_addr = #{developAddr,jdbcType=VARCHAR},
      business_license = #{businessLicense,jdbcType=VARCHAR},
      qual_level = #{qualLevel,jdbcType=VARCHAR},
      legal_person = #{legalPerson,jdbcType=VARCHAR},
      person_position = #{personPosition,jdbcType=VARCHAR},
      broker_idcard = #{brokerIdcard,jdbcType=VARCHAR},
      relation_phone = #{relationPhone,jdbcType=VARCHAR},
      zipCode = #{zipcode,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where developer_id = #{developerId,jdbcType=INTEGER}
  </update>
</mapper>
