package hitwh.fanghh.aop;

import java.util.Map;

import org.apache.log4j.Logger;
import org.springframework.http.HttpStatus;
import org.springframework.http.converter.HttpMessageNotReadableException;
import org.springframework.web.HttpMediaTypeNotSupportedException;
import org.springframework.web.HttpRequestMethodNotSupportedException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import hitwh.fanghh.util.ResponseMapUtil;

/**
 * 全局异常处理类
 *
 * @author ZH
 * @date 2016-08-29-14:14
 */

@ControllerAdvice
@ResponseBody
public class ExceptionAdvice
{

	public static Logger logger = Logger.getLogger(ExceptionAdvice.class);

	/**
	 * 用户权限不足
	 */
	@ResponseStatus(HttpStatus.OK)
	@ExceptionHandler(PermissionDeniedException.class)
	public Map<String, Object> handleTokenException(Exception e)
	{
		return ResponseMapUtil.responseError(e.getMessage());
	}

	/**
	 * 400 Bad Request
	 */
	@ResponseStatus(HttpStatus.BAD_REQUEST)
	@ExceptionHandler(HttpMessageNotReadableException.class)
	public Map<String, Object> handleHttpMessageNotReadableException(HttpMessageNotReadableException e)
	{
		logger.error("参数解析失败", e);
		return ResponseMapUtil.responseError("could_not_read_json");
	}

	/**
	 * 405 - Method Not Allowed
	 */
	@ResponseStatus(HttpStatus.METHOD_NOT_ALLOWED)
	@ExceptionHandler(HttpRequestMethodNotSupportedException.class)
	public Map<String, Object> handleHttpRequestMethodNotSupportedException(HttpRequestMethodNotSupportedException e)
	{
		logger.error("不支持当前请求方法", e);
		return ResponseMapUtil.responseError("request_method_not_supported");
	}

	/**
	 * 415 - Unsupported Media Type
	 */
	@ResponseStatus(HttpStatus.UNSUPPORTED_MEDIA_TYPE)
	@ExceptionHandler(HttpMediaTypeNotSupportedException.class)
	public Map<String, Object> handleHttpMediaTypeNotSupportedException(Exception e)
	{
		logger.error("不支持当前媒体类型", e);
		return ResponseMapUtil.responseError("content_type_not_supported");
	}

	/**
	 * 500 - Internal Server Error
	 */
	@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)
	@ExceptionHandler(RuntimeException.class)
	public Map<String, Object> handleException(Exception e)
	{
		logger.error("服务运行异常", e);
		return ResponseMapUtil.responseError(e.getMessage());
	}
}
